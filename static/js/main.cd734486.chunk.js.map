{"version":3,"sources":["components/card/card.components.jsx","components/card-list/card-list.components.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","type","name","email","CardList","monsters","map","SearchcBox","placeholder","handleChange","onChange","App","e","setState","searchField","target","value","tipo1","searchType","tipo2","tipo3","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","searchType_aux","class","onClick","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAIaA,EAAO,SAAAC,GAAK,OACvB,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAI,WAAWC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,mBAAqDL,EAAMM,KAA3D,mBACvB,6BAAKN,EAAMI,QAAQG,OACnB,4BAAIP,EAAMI,QAAQI,YCJTC,G,MAAW,SAAAT,GAAK,OACzB,qBAAKC,UAAU,YAAf,SACKD,EAAMU,SAASC,KAAI,SAAAP,GAAO,OACzB,cAAC,EAAD,CAEEA,QAASA,EACTE,KAAQN,EAAMM,MAFTF,EAAQC,WCJZO,G,MAAa,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OAEtB,uBACAb,UAAU,SACVK,KAAK,SACLO,YAAaA,EACbE,SAAUD,MC8GCE,G,wDAhHb,aAAe,IAAD,8BACZ,gBAoBFF,aAAe,SAACG,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAtBzB,EAyBdC,MAAQ,SAACL,GACP,EAAKC,SAAS,CAACK,WAAY,KA1Bf,EA6BdC,MAAQ,SAACP,GACP,EAAKC,SAAS,CAACK,WAAY,KA9Bf,EAiCdE,MAAQ,SAACR,GACP,EAAKC,SAAS,CAACK,WAAY,KAhC3B,EAAKG,MAAQ,CACXhB,SAAU,GACVS,YAAa,GACbI,WAAY,IALF,E,qDAYd,WAAqB,IAAD,OAElBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKb,SAAS,CAAER,SAAUqB,S,oBAsB7C,WAAU,IAAD,EACqCC,KAAKN,MAAzChB,EADD,EACCA,SAAUS,EADX,EACWA,YAAYI,EADvB,EACuBA,WACxBU,EAAmBvB,EAASwB,QAAO,SAAA9B,GAAO,OAC5CA,EAAQG,KAAK4B,cAAcC,SAASjB,EAAYgB,kBAG9CE,EAAiB,IAKvB,OAJKd,EAAa,IACdc,EAAiBd,GAInB,sBAAKtB,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEY,YAAY,mBACZC,aAAckB,KAAKlB,eAGrB,gCAGA,yBAAQwB,MAAM,SAASC,QAASP,KAAKV,MAArC,mBAEE,qBAAKgB,MAAM,uBACX,qBAAKA,MAAM,wBAGb,yBAAQA,MAAM,SAASC,QAASP,KAAKR,MAArC,mBAEE,qBAAKc,MAAM,uBACX,qBAAKA,MAAM,wBAGb,yBAAQA,MAAM,SAASC,QAASP,KAAKP,MAArC,mBAEE,qBAAKa,MAAM,uBACX,qBAAKA,MAAM,2BAMb,cAAC,EAAD,CACE5B,SAAUuB,EACV3B,KAAQ+B,W,GArFAG,IAAMC,YCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.cd734486.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.styles.css'\r\n\r\nexport const Card = props => (  \r\n  <div className='card-container'>\r\n    <img alt=\"monsters\" src={`https://robohash.org/${props.monster.id}?set=set${props.type}&size=180x180`}/>\r\n    <h2>{props.monster.name}</h2>\r\n    <p>{props.monster.email}</p>\r\n  </div>\r\n)","import React from 'react';\r\nimport {Card} from '../card/card.components'\r\nimport './card-list.styles.css'\r\n\r\nexport const CardList = props => (       \r\n    <div className=\"card-list\">       \r\n        {props.monsters.map(monster => (            \r\n          <Card \r\n            key={monster.id} \r\n            monster={monster}\r\n            type = {props.type}\r\n            />          \r\n          ))}\r\n    </div>\r\n)\r\n        \r\n","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n          \r\nexport const SearchcBox = ({placeholder,handleChange}) => (\r\n\r\n    <input \r\n    className=\"search\"\r\n    type=\"search\" \r\n    placeholder={placeholder}\r\n    onChange={handleChange}\r\n  />\r\n\r\n)","import React from 'react'; \nimport { CardList } from './components/card-list/card-list.components'\nimport { SearchcBox } from './components/search-box/search-box.component'\nimport './App.css';\n\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: '',\n      searchType: ''\n    }\n\n    //this.handleChange = this.handleChange.bind(this);\n\n  }\n\n  componentDidMount() {\n\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }))\n\n  }\n\n  \n  handleChange = (e) => {\n    this.setState({searchField: e.target.value});\n  }\n\n  tipo1 = (e) => {\n    this.setState({searchType: 1});\n  }\n\n  tipo2 = (e) => {\n    this.setState({searchType: 2});\n  }\n\n  tipo3 = (e) => {\n    this.setState({searchType: 3});\n  }\n  \n\n  render() {\n    const { monsters, searchField,searchType} = this.state;\n    const filteredMonsters = monsters.filter(monster => \n        monster.name.toLowerCase().includes(searchField.toLowerCase())\n      );\n\n      var searchType_aux = '3'\n      if(searchType > 0){\n        searchType_aux = searchType\n      };\n      \n    return (\n      <div className=\"App\">\n        <h1>Monstros Rolodex</h1>\n        <SearchcBox\n          placeholder='Prucurar Monstro' \n          handleChange={this.handleChange}\n        />\n        \n        <div>\n\n      \n        <button class=\"button\" onClick={this.tipo1}>\n          Tipo 1\n          <div class=\"button__horizontal\"></div>\n          <div class=\"button__vertical\"></div>\n        </button>\n\n        <button class=\"button\" onClick={this.tipo2}>\n          Tipo 2\n          <div class=\"button__horizontal\"></div>\n          <div class=\"button__vertical\"></div>\n        </button>\n\n        <button class=\"button\" onClick={this.tipo3}>\n          Tipo 3\n          <div class=\"button__horizontal\"></div>\n          <div class=\"button__vertical\"></div>\n        </button>\n          \n         \n        </div>\n\n        <CardList \n          monsters={filteredMonsters}\n          type = {searchType_aux}\n        />           \n      </div>\n    )\n  }\n\n}\n/*\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Hello Mundo com React\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n*/\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}